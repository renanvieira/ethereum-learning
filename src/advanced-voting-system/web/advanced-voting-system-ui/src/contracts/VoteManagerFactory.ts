/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { VoteManager } from "./VoteManager";

export class VoteManagerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    proposalDeadLineInDays: BigNumberish,
    overrides?: Overrides
  ): Promise<VoteManager> {
    return super.deploy(
      proposalDeadLineInDays,
      overrides || {}
    ) as Promise<VoteManager>;
  }
  getDeployTransaction(
    proposalDeadLineInDays: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(proposalDeadLineInDays, overrides || {});
  }
  attach(address: string): VoteManager {
    return super.attach(address) as VoteManager;
  }
  connect(signer: Signer): VoteManagerFactory {
    return super.connect(signer) as VoteManagerFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VoteManager {
    return new Contract(address, _abi, signerOrProvider) as VoteManager;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "proposalDeadLineInDays",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "createProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e09380380610e0983398101604081905261002f9161004a565b6000805461ffff191661ffff92909216919091179055610075565b60006020828403121561005c57600080fd5b815161ffff8116811461006e57600080fd5b9392505050565b610d85806100846000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806349c2a1a61461003b578063c7f758a814610070575b600080fd5b61004e6100493660046104ae565b61009b565b604080519283526001600160a01b039091166020830152015b60405180910390f35b61008361007e36600461055f565b610298565b6040516001600160a01b039091168152602001610067565b6000806100a78361034c565b60008351116100b557600080fd5b600080546100ca9061ffff166201518061058e565b6100d99062ffffff16426105b9565b9050600084826040516100eb9061048b565b6100f692919061061e565b604051809103906000f080158015610112573d6000803e3d6000fd5b5090508061011f816103c0565b60018054808201825560009182527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03851617905561017f3388610436565b60008181526002602052604090206004015490915060ff16156101e95760405162461bcd60e51b815260206004820152601760248201527f50726f706f73616c20416c72656164792045786973747300000000000000000060448201526064015b60405180910390fd5b6101f33388610436565b60008281526002602081815260409283902060038101949094556001805492850192909255835473ffffffffffffffffffffffffffffffffffffffff199081163317855582850180546001600160a01b0389169216821790556004909401805460ff191690921790915590519182527f488fccde177d9377f35d8d9a4f0b3462fcc7cdb926a00d3d99630ef1d672a2cd910160405180910390a1969095509350505050565b60008082116102a657600080fd5b60008281526002602052604090206004015460ff1661032d5760405162461bcd60e51b815260206004820152602160248201527f5468652070726f706f73616c207265717565737420646f6e277420657869737460448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016101e0565b506000908152600260205260409020600101546001600160a01b031690565b6103bd816040516024016103609190610640565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac0000000000000000000000000000000000000000000000000000000017905261046a565b50565b6040516001600160a01b03821660248201526103bd9060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2c2ecbc20000000000000000000000000000000000000000000000000000000017905261046a565b6000828260405160200161044b92919061065a565b60408051601f1981840301815291905280516020909101209392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6106cb8061068583390190565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104c057600080fd5b813567ffffffffffffffff808211156104d857600080fd5b818401915084601f8301126104ec57600080fd5b8135818111156104fe576104fe610498565b604051601f8201601f19908116603f0116810190838211818310171561052657610526610498565b8160405282815287602084870101111561053f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561057157600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600062ffffff808316818516818304811182151516156105b0576105b0610578565b02949350505050565b600082198211156105cc576105cc610578565b500190565b6000815180845260005b818110156105f7576020818501810151868301820152016105db565b81811115610609576000602083870101525b50601f01601f19169290920160200192915050565b60408152600061063160408301856105d1565b90508260208301529392505050565b60208152600061065360208301846105d1565b9392505050565b6001600160a01b038316815260406020820152600061067c60408301846105d1565b94935050505056fe608060405234801561001057600080fd5b506040516106cb3803806106cb83398101604081905261002f91610107565b80421061003b57600080fd5b815161004e906000906020850190610058565b506001555061021a565b828054610064906101df565b90600052602060002090601f01602090048101928261008657600085556100cc565b82601f1061009f57805160ff19168380011785556100cc565b828001600101855582156100cc579182015b828111156100cc5782518255916020019190600101906100b1565b506100d89291506100dc565b5090565b5b808211156100d857600081556001016100dd565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561011a57600080fd5b82516001600160401b038082111561013157600080fd5b818501915085601f83011261014557600080fd5b815181811115610157576101576100f1565b604051601f8201601f19908116603f0116810190838211818310171561017f5761017f6100f1565b8160405282815260209350888484870101111561019b57600080fd5b600091505b828210156101bd57848201840151818301850152908301906101a0565b828211156101ce5760008484830101525b969092015195979596505050505050565b600181811c908216806101f357607f821691505b6020821081141561021457634e487b7160e01b600052602260045260246000fd5b50919050565b6104a2806102296000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063392f37e911610050578063392f37e9146100e25780637ce1f844146100f7578063b3f98adc1461010e57600080fd5b80630dc96015146100775780630e1333dc14610097578063167a86f2146100cf575b600080fd5b600454600354604080519283526020830191909152015b60405180910390f35b6100aa6100a5366004610385565b610123565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008e565b6100aa6100dd366004610385565b61015a565b6100ea61016a565b60405161008e919061039e565b61010060015481565b60405190815260200161008e565b61012161011c3660046103f3565b6101f8565b005b6004818154811061013357600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6003818154811061013357600080fd5b600080546101779061041b565b80601f01602080910402602001604051908101604052809291908181526020018280546101a39061041b565b80156101f05780601f106101c5576101008083540402835291602001916101f0565b820191906000526020600020905b8154815290600101906020018083116101d357829003601f168201915b505050505081565b3360009081526002602052604090205460ff161561025d5760405162461bcd60e51b815260206004820152601a60248201527f54686973206164647265737320616c726561647920766f74656400000000000060448201526064015b60405180910390fd5b6001544211156102af5760405162461bcd60e51b815260206004820152601060248201527f50726f706f73616c2065787069726564000000000000000000000000000000006044820152606401610254565b336000908152600260205260408120805460ff191660011790558160018111156102db576102db610456565b141561033357600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805473ffffffffffffffffffffffffffffffffffffffff19163317905550565b600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01805473ffffffffffffffffffffffffffffffffffffffff19163317905550565b60006020828403121561039757600080fd5b5035919050565b600060208083528351808285015260005b818110156103cb578581018301518582016040015282016103af565b818111156103dd576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561040557600080fd5b81356002811061041457600080fd5b9392505050565b600181811c9082168061042f57607f821691505b6020821081141561045057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220d87f7da57f7ef4c9f0662cf585c5d1eae0630c0a06d4e8a448c75ace44a9bfe964736f6c63430008090033a2646970667358221220f89c3caf354e3609edd7fc88ec02a232f6e7bd1e493055eca7894c77beec5c1d64736f6c63430008090033";
