/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VoteManager, VoteManagerInterface } from "../VoteManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "proposalDeadLineInDays",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposalAddress",
        type: "address",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "createProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfProposals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct VoteManager.ProposalData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "contract Proposal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516112f13803806112f183398101604081905261002f9161005b565b60008161ffff161161004057600080fd5b6000805461ffff191661ffff92909216919091179055610086565b60006020828403121561006d57600080fd5b815161ffff8116811461007f57600080fd5b9392505050565b61125c806100956000396000f3fe608060405260043610620000445760003560e01c8063013cf08b146200004957806333809b6c146200008b57806349c2a1a614620000ab578063eb8b981114620000e0575b600080fd5b3480156200005657600080fd5b506200006e62000068366004620004ff565b62000157565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156200009857600080fd5b5060015460405190815260200162000082565b620000c2620000bc3660046200052f565b62000182565b604080519283526001600160a01b0390911660208301520162000082565b348015620000ed57600080fd5b5062000105620000ff366004620005ea565b62000388565b604051620000829190600060a0820190506001600160a01b0380845116835280602085015116602084015250604083015160408301526060830151606083015260808301511515608083015292915050565b600181815481106200016857600080fd5b6000918252602090912001546001600160a01b0316905081565b60008034670de0b6b3a7640000146200019a57600080fd5b6000620001a83385620004bb565b90506000845111620001b957600080fd5b60008181526003602052604090205460ff16156200021e5760405162461bcd60e51b815260206004820152601760248201527f50726f706f73616c20416c72656164792045786973747300000000000000000060448201526064015b60405180910390fd5b60008054620002359061ffff166201518062000632565b620002469062ffffff164262000660565b9050600034868385336040516200025d90620004f1565b6200026c9493929190620006cb565b6040518091039082f09050801580156200028a573d6000803e3d6000fd5b5060008481526003602081815260408084208054600160ff1991821681179092556001600160a01b0387168087526002948590528387209586018b90558254948601949094558454337fffffffffffffffffffffffff0000000000000000000000000000000000000000918216811787558684018054831687179055600490960180549092168317909155815480830183559186527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690910180549091168317905551939450849390928792917fe669ca381c47a2c25df06ebbe580c111183f1e92460fd3ab51050d2306b340279190a49296929550919350505050565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526001600160a01b038216620003c757600080fd5b6001600160a01b03821660009081526002602052604090206004015460ff166200045a5760405162461bcd60e51b815260206004820152602160248201527f5468652070726f706f73616c207265717565737420646f6e277420657869737460448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840162000215565b506001600160a01b03908116600090815260026020818152604092839020835160a0810185528154861681526001820154909516918501919091529081015491830191909152600381015460608301526004015460ff161515608082015290565b60008282604051602001620004d292919062000705565b60408051601f1981840301815291905280516020909101209392505050565b610af5806200073283390190565b6000602082840312156200051257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156200054257600080fd5b813567ffffffffffffffff808211156200055b57600080fd5b818401915084601f8301126200057057600080fd5b81358181111562000585576200058562000519565b604051601f8201601f19908116603f01168101908382118183101715620005b057620005b062000519565b81604052828152876020848701011115620005ca57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215620005fd57600080fd5b81356001600160a01b03811681146200061557600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600062ffffff808316818516818304811182151516156200065757620006576200061c565b02949350505050565b600082198211156200067657620006766200061c565b500190565b6000815180845260005b81811015620006a35760208185018101518683018201520162000685565b81811115620006b6576000602083870101525b50601f01601f19169290920160200192915050565b608081526000620006e060808301876200067b565b60208301959095525060408101929092526001600160a01b0316606090910152919050565b6001600160a01b03831681526040602082015260006200072960408301846200067b565b94935050505056fe608060405260405162000af538038062000af5833981016040819052620000269162000259565b8242106200007b5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420646561646c696e652074696d657374616d7000000000000060448201526064015b60405180910390fd5b6001600160a01b038116620000d35760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642063726561746f722061646472657373000000000000000000604482015260640162000072565b60003411620001135760405162461bcd60e51b815260206004820152600b60248201526a09ad2e6e6d2dcce408aa8960ab1b604482015260640162000072565b600582905583516200012d90600390602087019062000180565b5060048390556200013f818462000149565b505050506200039b565b600034116200015757600080fd5b34600255600155600080546001600160a01b0319166001600160a01b0392909216919091179055565b8280546200018e906200035e565b90600052602060002090601f016020900481019282620001b25760008555620001fd565b82601f10620001cd57805160ff1916838001178555620001fd565b82800160010185558215620001fd579182015b82811115620001fd578251825591602001919060010190620001e0565b506200020b9291506200020f565b5090565b5b808211156200020b576000815560010162000210565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200025457600080fd5b919050565b600080600080608085870312156200027057600080fd5b84516001600160401b03808211156200028857600080fd5b818701915087601f8301126200029d57600080fd5b815181811115620002b257620002b262000226565b604051601f8201601f19908116603f01168101908382118183101715620002dd57620002dd62000226565b81604052828152602093508a84848701011115620002fa57600080fd5b600091505b828210156200031e5784820184015181830185015290830190620002ff565b82821115620003305760008484830101525b80985050505080870151945050506040850151915062000353606086016200023c565b905092959194509250565b600181811c908216806200037357607f821691505b602082108114156200039557634e487b7160e01b600052602260045260246000fd5b50919050565b61074a80620003ab6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80633ccfd60b1161005b5780633ccfd60b1461010d5780637ce1f84414610117578063af640d0f1461012e578063b3f98adc1461013757600080fd5b80630dc960151461008d5780630e1333dc146100ad578063167a86f2146100e5578063392f37e9146100f8575b600080fd5b600854600754604080519283526020830191909152015b60405180910390f35b6100c06100bb36600461062d565b61014a565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100a4565b6100c06100f336600461062d565b610181565b610100610191565b6040516100a49190610646565b61011561021f565b005b61012060045481565b6040519081526020016100a4565b61012060055481565b61011561014536600461069b565b610475565b6008818154811061015a57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6007818154811061015a57600080fd5b6003805461019e906106c3565b80601f01602080910402602001604051908101604052809291908181526020018280546101ca906106c3565b80156102175780601f106101ec57610100808354040283529160200191610217565b820191906000526020600020905b8154815290600101906020018083116101fa57829003601f168201915b505050505081565b60015442101561029c5760405162461bcd60e51b815260206004820152602960248201527f54696d654c6f636b3a204c6f636b2065787069726174696f6e206e6f7420796560448201527f742072656163686564000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60005473ffffffffffffffffffffffffffffffffffffffff1633146103295760405162461bcd60e51b815260206004820152603460248201527f54696d654c6f636b3a2073656e6465722061646472657373206973206e6f742060448201527f7468652070726f706f73616c2063726561746f720000000000000000000000006064820152608401610293565b60025461039e5760405162461bcd60e51b815260206004820152602560248201527f54696d654c6f636b3a205468657265206973206e6f2045544820746f2077697460448201527f68647261770000000000000000000000000000000000000000000000000000006064820152608401610293565b604080516060810182526000805473ffffffffffffffffffffffffffffffffffffffff168252600154602083015260028054838501819052908290559251919290913391908381818185875af1925050503d806000811461041b576040519150601f19603f3d011682016040523d82523d6000602084013e610420565b606091505b50509050806104715760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610293565b5050565b3360009081526006602052604090205460ff16156104d55760405162461bcd60e51b815260206004820152601a60248201527f54686973206164647265737320616c726561647920766f7465640000000000006044820152606401610293565b6004544211156105275760405162461bcd60e51b815260206004820152601060248201527f50726f706f73616c2065787069726564000000000000000000000000000000006044820152606401610293565b336000908152600660205260408120805460ff19166001179055816001811115610553576105536106fe565b14156105ad57600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301805473ffffffffffffffffffffffffffffffffffffffff1916331790556105fd565b600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801805473ffffffffffffffffffffffffffffffffffffffff1916331790555b604051309033907fce0c7a2a940807f7dc2ce7a615c2532e915e6c0ac9a08bc4ed9d515a710a53e290600090a350565b60006020828403121561063f57600080fd5b5035919050565b600060208083528351808285015260005b8181101561067357858101830151858201604001528201610657565b81811115610685576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156106ad57600080fd5b8135600281106106bc57600080fd5b9392505050565b600181811c908216806106d757607f821691505b602082108114156106f857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212209965d9b71392cb6cda0879fc169da3023f4e680c01828801ea342906d7ae012664736f6c63430008090033a264697066735822122048ef424a384e023f642d72ea2dbb56a85c80ae0c4eaa00eaac081a2a48f84cdb64736f6c63430008090033";

type VoteManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VoteManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VoteManager__factory extends ContractFactory {
  constructor(...args: VoteManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "VoteManager";
  }

  deploy(
    proposalDeadLineInDays: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VoteManager> {
    return super.deploy(
      proposalDeadLineInDays,
      overrides || {}
    ) as Promise<VoteManager>;
  }
  getDeployTransaction(
    proposalDeadLineInDays: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(proposalDeadLineInDays, overrides || {});
  }
  attach(address: string): VoteManager {
    return super.attach(address) as VoteManager;
  }
  connect(signer: Signer): VoteManager__factory {
    return super.connect(signer) as VoteManager__factory;
  }
  static readonly contractName: "VoteManager";
  public readonly contractName: "VoteManager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VoteManagerInterface {
    return new utils.Interface(_abi) as VoteManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VoteManager {
    return new Contract(address, _abi, signerOrProvider) as VoteManager;
  }
}
