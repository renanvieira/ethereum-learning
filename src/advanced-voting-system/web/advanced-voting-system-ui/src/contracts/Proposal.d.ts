/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ProposalInterface extends ethers.utils.Interface {
  functions: {
    "_noVotes(uint256)": FunctionFragment;
    "_yesVotes(uint256)": FunctionFragment;
    "getVotes()": FunctionFragment;
    "metadata()": FunctionFragment;
    "proposalDeadline()": FunctionFragment;
    "vote(uint8)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "_noVotes",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_yesVotes",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "getVotes", values?: undefined): string;
  encodeFunctionData(functionFragment: "metadata", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "proposalDeadline",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "vote", values: [BigNumberish]): string;

  decodeFunctionResult(functionFragment: "_noVotes", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "_yesVotes", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getVotes", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "metadata", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "proposalDeadline",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "vote", data: BytesLike): Result;

  events: {};
}

export class Proposal extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ProposalInterface;

  functions: {
    _noVotes(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "_noVotes(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    _yesVotes(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "_yesVotes(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getVotes(overrides?: CallOverrides): Promise<{
      yesVotes: BigNumber;
      noVotes: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    "getVotes()"(overrides?: CallOverrides): Promise<{
      yesVotes: BigNumber;
      noVotes: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    metadata(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "metadata()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    proposalDeadline(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "proposalDeadline()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    vote(
      userVote: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "vote(uint8)"(
      userVote: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  _noVotes(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "_noVotes(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  _yesVotes(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "_yesVotes(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getVotes(overrides?: CallOverrides): Promise<{
    yesVotes: BigNumber;
    noVotes: BigNumber;
    0: BigNumber;
    1: BigNumber;
  }>;

  "getVotes()"(overrides?: CallOverrides): Promise<{
    yesVotes: BigNumber;
    noVotes: BigNumber;
    0: BigNumber;
    1: BigNumber;
  }>;

  metadata(overrides?: CallOverrides): Promise<string>;

  "metadata()"(overrides?: CallOverrides): Promise<string>;

  proposalDeadline(overrides?: CallOverrides): Promise<BigNumber>;

  "proposalDeadline()"(overrides?: CallOverrides): Promise<BigNumber>;

  vote(
    userVote: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "vote(uint8)"(
    userVote: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    _noVotes(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "_noVotes(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    _yesVotes(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "_yesVotes(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getVotes(overrides?: CallOverrides): Promise<{
      yesVotes: BigNumber;
      noVotes: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    "getVotes()"(overrides?: CallOverrides): Promise<{
      yesVotes: BigNumber;
      noVotes: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    metadata(overrides?: CallOverrides): Promise<string>;

    "metadata()"(overrides?: CallOverrides): Promise<string>;

    proposalDeadline(overrides?: CallOverrides): Promise<BigNumber>;

    "proposalDeadline()"(overrides?: CallOverrides): Promise<BigNumber>;

    vote(userVote: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "vote(uint8)"(
      userVote: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    _noVotes(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "_noVotes(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _yesVotes(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "_yesVotes(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getVotes(overrides?: CallOverrides): Promise<BigNumber>;

    "getVotes()"(overrides?: CallOverrides): Promise<BigNumber>;

    metadata(overrides?: CallOverrides): Promise<BigNumber>;

    "metadata()"(overrides?: CallOverrides): Promise<BigNumber>;

    proposalDeadline(overrides?: CallOverrides): Promise<BigNumber>;

    "proposalDeadline()"(overrides?: CallOverrides): Promise<BigNumber>;

    vote(userVote: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "vote(uint8)"(
      userVote: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    _noVotes(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "_noVotes(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _yesVotes(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "_yesVotes(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getVotes(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getVotes()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    metadata(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "metadata()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    proposalDeadline(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "proposalDeadline()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    vote(
      userVote: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "vote(uint8)"(
      userVote: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
